apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    infra_id: 446420e7-e7fa-4af7-b7e3-97dbde7e0114
    revision_id: aa25b3a3-7c55-494d-957b-4d92247d1506
    workflow_id: 4906072c-1fca-40da-93b6-5d6a14bac3ed
    workflows.argoproj.io/controller-instanceid: 446420e7-e7fa-4af7-b7e3-97dbde7e0114
  name: aaa
  namespace: litmus
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: litmus
  entrypoint: aaa
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: aaa
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-faults
        template: install-chaos-faults
    - - arguments: {}
        name: gcp-vm-instance-stop-kpn
        template: gcp-vm-instance-stop-kpn
    - - arguments: {}
        name: pod-network-partition-wu6
        template: pod-network-partition-wu6
    - - arguments: {}
        name: cleanup-chaos-resources
        template: cleanup-chaos-resources
  - container:
      args:
      - kubectl apply -f /tmp/ -n {{workflow.parameters.adminModeNamespace}} && sleep
        30
      command:
      - sh
      - -c
      image: litmuschaos/k8s:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: gcp-vm-instance-stop-kpn
        path: /tmp/gcp-vm-instance-stop-kpn.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: >
                Stops GCP VM instances and GKE nodes for a specified duration and later
                restarts them
            kind: ChaosExperiment
            metadata:
              name: gcp-vm-instance-stop
              labels:
                name: gcp-vm-instance-stop
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 3.16.0
            spec:
              definition:
                scope: Cluster
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - secrets
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                  - apiGroups:
                      - ""
                    resources:
                      - nodes
                    verbs:
                      - get
                      - list
                image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name gcp-vm-instance-stop
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "30"
                  - name: CHAOS_INTERVAL
                    value: "30"
                  - name: SEQUENCE
                    value: parallel
                  - name: RAMP_TIME
                    value: ""
                  - name: MANAGED_INSTANCE_GROUP
                    value: disable
                  - name: VM_INSTANCE_NAMES
                    value: ""
                  - name: GCP_PROJECT_ID
                    value: ""
                  - name: ZONES
                    value: ""
                  - name: DEFAULT_HEALTH_CHECK
                    value: "false"
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: gcp-vm-instance-stop
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: 3.16.0
                secrets:
                  - name: cloud-secret
                    mountPath: /tmp/
      - name: pod-network-partition-wu6
        path: /tmp/pod-network-partition-wu6.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Injects 100% network packet loss on pods belonging to an app deployment
            kind: ChaosExperiment
            metadata:
              name: pod-network-partition
              labels:
                name: pod-network-partition
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 3.16.0
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - networking.k8s.io
                    resources:
                      - networkpolicies
                    verbs:
                      - create
                      - delete
                      - list
                      - get
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-network-partition
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: RAMP_TIME
                    value: ""
                  - name: DEFAULT_HEALTH_CHECK
                    value: "false"
                  - name: DESTINATION_IPS
                    value: ""
                  - name: DESTINATION_HOSTS
                    value: ""
                  - name: POLICY_TYPES
                    value: all
                  - name: POD_SELECTOR
                    value: ""
                  - name: NAMESPACE_SELECTOR
                    value: ""
                  - name: PORTS
                    value: ""
                labels:
                  name: pod-network-partition
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: 3.16.0
    metadata: {}
    name: install-chaos-faults
    outputs: {}
  - container:
      args:
      - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: litmuschaos/k8s:2.11.0
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: cleanup-chaos-resources
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-gcp-vm-instance-stop-kpn.yaml
      - -saveName=/tmp/engine-name
      image: docker.io/litmuschaos/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: gcp-vm-instance-stop-kpn
        path: /tmp/chaosengine-gcp-vm-instance-stop-kpn.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              labels:
                workflow_run_id: "{{ workflow.uid }}"
                workflow_name: aaa
              annotations:
                probeRef: '[{"name":"nginx-health-check","mode":"Continuous"}]'
              generateName: gcp-vm-instance-stop-kpn
            spec:
              jobCleanUpPolicy: retain
              engineState: active
              chaosServiceAccount: litmus-admin
              experiments:
                - name: gcp-vm-instance-stop
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "30"
                        - name: CHAOS_INTERVAL
                          value: "30"
                        - name: SEQUENCE
                          value: parallel
                        - name: RAMP_TIME
                          value: ""
                        - name: MANAGED_INSTANCE_GROUP
                          value: disable
                        - name: VM_INSTANCE_NAMES
                          value: gke-gameday-tooling-trial-persistance-163ee26c-2hhj
                        - name: GCP_PROJECT_ID
                          value: shopify-resiliency-sandbox
                        - name: ZONES
                          value: ""
                        - name: DEFAULT_HEALTH_CHECK
                          value: "false"
    metadata:
      labels:
        weight: "10"
    name: gcp-vm-instance-stop-kpn
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-pod-network-partition-wu6.yaml
      - -saveName=/tmp/engine-name
      image: docker.io/litmuschaos/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-network-partition-wu6
        path: /tmp/chaosengine-pod-network-partition-wu6.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              labels:
                workflow_run_id: "{{ workflow.uid }}"
                workflow_name: aaa
              annotations:
                probeRef: '[{"name":"nginx-health-check","mode":"SOT"}]'
              generateName: pod-network-partition-wu6
            spec:
              engineState: active
              appinfo:
                appns: ""
                applabel: ""
                appkind: ""
              chaosServiceAccount: litmus-admin
              experiments:
                - name: pod-network-partition
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: RAMP_TIME
                          value: ""
                        - name: DEFAULT_HEALTH_CHECK
                          value: "false"
                        - name: DESTINATION_IPS
                          value: ""
                        - name: DESTINATION_HOSTS
                          value: ""
                        - name: POLICY_TYPES
                          value: all
                        - name: POD_SELECTOR
                          value: ""
                        - name: NAMESPACE_SELECTOR
                          value: ""
                        - name: PORTS
                          value: ""
    metadata:
      labels:
        weight: "10"
    name: pod-network-partition-wu6
    outputs: {}
status:
  finishedAt: null
  startedAt: null
