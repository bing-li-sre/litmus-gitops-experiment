kind: Workflow
apiVersion: argoproj.io/v1alpha1
metadata:
  name: bbb
  namespace: litmus
  labels:
    infra_id: 446420e7-e7fa-4af7-b7e3-97dbde7e0114
    revision_id: 212eb517-6e41-40c6-9921-9ae5476abcbd
    workflow_id: 4906072c-1fca-40da-93b6-5d6a14bac3ed
    workflows.argoproj.io/controller-instanceid: 446420e7-e7fa-4af7-b7e3-97dbde7e0114
spec:
  templates:
    - name: bbb
      inputs: {}
      outputs: {}
      metadata: {}
      steps:
        - - name: install-chaos-faults
            template: install-chaos-faults
            arguments: {}
        - - name: gcp-vm-instance-stop-kpn
            template: gcp-vm-instance-stop-kpn
            arguments: {}
        - - name: cleanup-chaos-resources
            template: cleanup-chaos-resources
            arguments: {}
    - name: install-chaos-faults
      inputs:
        artifacts:
          - name: gcp-vm-instance-stop-kpn
            path: /tmp/gcp-vm-instance-stop-kpn.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: >
                    Stops GCP VM instances and GKE nodes for a specified duration and later
                    restarts them
                kind: ChaosExperiment

                metadata:
                  name: gcp-vm-instance-stop
                  labels:
                    name: gcp-vm-instance-stop
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Cluster
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - secrets
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                      - apiGroups:
                          - ""
                        resources:
                          - nodes
                        verbs:
                          - get
                          - list
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name gcp-vm-instance-stop
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "30"
                      - name: CHAOS_INTERVAL
                        value: "30"
                      - name: SEQUENCE
                        value: parallel
                      - name: RAMP_TIME
                        value: ""
                      - name: MANAGED_INSTANCE_GROUP
                        value: disable
                      - name: VM_INSTANCE_NAMES
                        value: ""
                      - name: GCP_PROJECT_ID
                        value: ""
                      - name: ZONES
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: gcp-vm-instance-stop
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: 3.16.0
                    secrets:
                      - name: cloud-secret
                        mountPath: /tmp/
      outputs: {}
      metadata: {}
      container:
        name: ""
        image: litmuschaos/k8s:2.11.0
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/ -n {{workflow.parameters.adminModeNamespace}}
            && sleep 30
        resources: {}
    - name: cleanup-chaos-resources
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ""
        image: litmuschaos/k8s:2.11.0
        command:
          - sh
          - -c
        args:
          - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n
            {{workflow.parameters.adminModeNamespace}}
        resources: {}
    - name: gcp-vm-instance-stop-kpn
      inputs:
        artifacts:
          - name: gcp-vm-instance-stop-kpn
            path: /tmp/chaosengine-gcp-vm-instance-stop-kpn.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                    workflow_name: bbb
                  annotations:
                    probeRef: '[{"name":"nginx-health-check","mode":"Continuous"}]'
                  generateName: gcp-vm-instance-stop-kpn
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: gcp-vm-instance-stop
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: SEQUENCE
                              value: parallel
                            - name: RAMP_TIME
                              value: ""
                            - name: MANAGED_INSTANCE_GROUP
                              value: disable
                            - name: VM_INSTANCE_NAMES
                              value: gke-gameday-tooling-trial-persistance-163ee26c-2hhj
                            - name: GCP_PROJECT_ID
                              value: shopify-resiliency-sandbox
                            - name: ZONES
                              value: ""
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-gcp-vm-instance-stop-kpn.yaml
          - -saveName=/tmp/engine-name
        resources: {}
  entrypoint: bbb
  arguments:
    parameters:
      - name: adminModeNamespace
        value: litmus
  serviceAccountName: argo-chaos
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
status: {}
